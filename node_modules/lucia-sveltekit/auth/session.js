import { createAccessToken, createFingerprintToken, createRefreshToken, getAccountFromDatabaseData, } from "../utils/auth.js";
import { LuciaError } from "../utils/error.js";
export const createUserSessionFunction = (context) => {
    const createUserSession = async (authId) => {
        const databaseData = (await context.adapter.getUserById(authId));
        if (!databaseData)
            throw new LuciaError("AUTH_INVALID_IDENTIFIER_TOKEN");
        const account = getAccountFromDatabaseData(databaseData);
        const userId = account.user.user_id;
        const fingerprintToken = createFingerprintToken(context);
        const refreshToken = await createRefreshToken(account.user.user_id, fingerprintToken.value, context);
        await context.adapter.setRefreshToken(refreshToken.value, userId);
        const accessToken = await createAccessToken(account.user, fingerprintToken.value, context);
        return {
            user: account.user,
            access_token: accessToken,
            refresh_token: refreshToken,
            fingerprint_token: fingerprintToken,
            cookies: [accessToken.cookie(), refreshToken.cookie(), fingerprintToken.cookie()]
        };
    };
    return createUserSession;
};
